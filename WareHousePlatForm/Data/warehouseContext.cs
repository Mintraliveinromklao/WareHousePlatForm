// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace WareHousePlatForm.Data
{
    public partial class warehouseContext : DbContext
    {
        public warehouseContext()
        {
        }

        public warehouseContext(DbContextOptions<warehouseContext> options)
            : base(options)
        {
        }

        public virtual DbSet<BoundData> BoundData { get; set; }
        public virtual DbSet<ExportHistory> ExportHistory { get; set; }
        public virtual DbSet<ImportItem> ImportItem { get; set; }
        public virtual DbSet<ProductInformation> ProductInformation { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see http://go.microsoft.com/fwlink/?LinkId=723263.
                optionsBuilder.UseSqlServer("Data Source=DESKTOP-791TMU3\\SQLEXPRESS;Initial Catalog=warehouse;Integrated Security=True");
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<BoundData>(entity =>
            {
                entity.HasKey(e => new { e.UserName, e.Name, e.DateBorrow });

                entity.Property(e => e.UserName).HasMaxLength(50);

                entity.Property(e => e.Name).HasMaxLength(50);

                entity.Property(e => e.DateBorrow).HasColumnType("datetime");

                entity.Property(e => e.Category)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.DateReturn).HasColumnType("datetime");

                entity.Property(e => e.Status).HasMaxLength(50);
            });

            modelBuilder.Entity<ExportHistory>(entity =>
            {
                entity.HasKey(e => new { e.DateTime, e.Name, e.UserName });

                entity.Property(e => e.DateTime).HasColumnType("datetime");

                entity.Property(e => e.Name).HasMaxLength(50);

                entity.Property(e => e.UserName).HasMaxLength(50);

                entity.Property(e => e.Category).HasMaxLength(50);

                entity.Property(e => e.Cause).HasMaxLength(50);

                entity.Property(e => e.Code).HasMaxLength(50);
            });

            modelBuilder.Entity<ImportItem>(entity =>
            {
                entity.HasKey(e => new { e.DateTime, e.Name, e.UserName });

                entity.Property(e => e.DateTime).HasColumnType("datetime");

                entity.Property(e => e.Name).HasMaxLength(50);

                entity.Property(e => e.UserName).HasMaxLength(50);

                entity.Property(e => e.Category).HasMaxLength(50);

                entity.Property(e => e.Code).HasMaxLength(50);
            });

            modelBuilder.Entity<ProductInformation>(entity =>
            {
                entity.HasKey(e => e.Name);

                entity.Property(e => e.Name).HasMaxLength(50);

                entity.Property(e => e.Category)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Code).HasMaxLength(50);
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}